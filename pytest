import pytest
from boat import RowingBoat

@pytest.fixture
def boat():
    return RowingBoat()

def test_move_forward_increases_speed(boat):
    initial_speed = boat.get_speed()
    boat.move_forward(2)
    assert boat.get_speed() == initial_speed + 2

def test_move_forward_cap_limits(boat):
    boat.move_forward(10)
    assert boat.get_speed() == boat.max_speed

def test_move_backward_decreases_speed(boat):
    boat.move_forward(3)
    boat.move_backward(1)
    assert boat.get_speed() == 2

def test_move_backward_cap_limits(boat):
    boat.move_backward(10)
    assert boat.get_speed() == boat.min_speed

def test_stop_resets_speed(boat):
    boat.move_forward(3)
    boat.stop()
    assert boat.get_speed() == 0

def test_status_moving_forward(boat):
    boat.move_forward(1)
    assert boat.status() == "Moving forward"

def test_status_moving_backward(boat):
    boat.move_backward(1)
    assert boat.status() == "Moving backward"

def test_status_stopped(boat):
    boat.stop()
    assert boat.status() == "Stopped"

# Интеграционные тесты
def test_speed_change_via_methods(boat):
    boat.move_forward(2)
    assert boat.get_speed() == 2
    boat.move_backward(1)
    assert boat.get_speed() == 1

def test_stop_sets_speed_zero(boat):
    boat.move_forward(3)
    boat.stop()
    assert boat.get_speed() == 0

# Системный тест
def test_full_cycle():
    boat = RowingBoat()
    boat.move_forward(3)
    assert boat.get_speed() == 3
    boat.move_backward(2)
    assert boat.get_speed() == 1
    boat.stop()
    assert boat.get_speed() == 0
    assert boat.status() == "Stopped"
